{"ast":null,"code":"// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n//\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n//\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nclass SwapiService {\n  async getResource() {\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error(`Could not fetch ${url}` + `, received ${response.status}`);\n    }\n\n    return await response.json();\n  }\n\n  async getAllPeople() {\n    const response = await this.getResource(`http://swapi.dev/api/people/`);\n    return response.results;\n  }\n\n  getPerson(id) {\n    return this.getResource(`http://swapi.dev/api/people/${id}/`);\n  }\n\n  async getAllPlanets() {\n    const response = await this.getResource(`http://swapi.dev/api/planets/`);\n    return response.results;\n  }\n\n  getPlanet(id) {\n    return this.getResource(`http://swapi.dev/api/planets/${id}/`);\n  }\n\n  async getAllStarships() {\n    const response = await this.getResource(`http://swapi.dev/api/starships/`);\n    return response.results;\n  }\n\n  getStarship(id) {\n    return this.getResource(`http://swapi.dev/api/starships/${id}/`);\n  }\n\n}\n\nconst swapi = new SwapiService();","map":{"version":3,"sources":["/home/mars/WebstormProjects/untitled/stardb/src/index.js"],"names":["SwapiService","getResource","response","fetch","url","ok","Error","status","json","getAllPeople","results","getPerson","id","getAllPlanets","getPlanet","getAllStarships","getStarship","swapi"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,YAAN,CAAmB;AACE,QAAXC,WAAW,GAAG;AACjB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAD,CAA5B;;AACC,QAAG,CAACF,QAAQ,CAACG,EAAb,EAAgB;AACZ,YAAM,IAAIC,KAAJ,CAAW,mBAAkBF,GAAI,EAAvB,GAA4B,cAAaF,QAAQ,CAACK,MAAO,EAAnE,CAAN;AACH;;AACD,WAAQ,MAAML,QAAQ,CAACM,IAAT,EAAd;AACH;;AAEiB,QAAZC,YAAY,GAAE;AAChB,UAAMP,QAAQ,GAAG,MAAM,KAAKD,WAAL,CAAkB,8BAAlB,CAAvB;AACA,WAAOC,QAAQ,CAACQ,OAAhB;AACH;;AACFC,EAAAA,SAAS,CAACC,EAAD,EAAK;AACV,WAAO,KAAKX,WAAL,CAAkB,+BAA8BW,EAAG,GAAnD,CAAP;AACH;;AAEkB,QAAbC,aAAa,GAAG;AACjB,UAAMX,QAAQ,GAAG,MAAM,KAAKD,WAAL,CAAkB,+BAAlB,CAAvB;AACD,WAAOC,QAAQ,CAACQ,OAAhB;AACH;;AAEDI,EAAAA,SAAS,CAACF,EAAD,EAAI;AACR,WAAO,KAAKX,WAAL,CAAkB,gCAA+BW,EAAG,GAApD,CAAP;AACJ;;AAEqB,QAAfG,eAAe,GAAE;AACnB,UAAMb,QAAQ,GAAG,MAAM,KAAKD,WAAL,CAAkB,iCAAlB,CAAvB;AACA,WAAOC,QAAQ,CAACQ,OAAhB;AACH;;AAEDM,EAAAA,WAAW,CAACJ,EAAD,EAAI;AACX,WAAO,KAAKX,WAAL,CAAkB,kCAAiCW,EAAG,GAAtD,CAAP;AACH;;AAjCc;;AAoCnB,MAAMK,KAAK,GAAG,IAAIjB,YAAJ,EAAd","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n//\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n//\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nclass SwapiService {\n    async getResource() {\n       const response = await fetch(url);\n        if(!response.ok){\n            throw new Error(`Could not fetch ${url}` + `, received ${response.status}`)\n        }\n        return  await response.json();\n    }\n\n    async getAllPeople(){\n        const response = await this.getResource(`http://swapi.dev/api/people/`);\n        return response.results;\n    }\n   getPerson(id) {\n       return this.getResource(`http://swapi.dev/api/people/${id}/`)\n   }\n\n   async getAllPlanets() {\n        const response = await this.getResource(`http://swapi.dev/api/planets/`);\n       return response.results;\n   }\n\n   getPlanet(id){\n        return this.getResource(`http://swapi.dev/api/planets/${id}/`)\n   }\n\n    async getAllStarships(){\n        const response = await this.getResource(`http://swapi.dev/api/starships/`);\n        return response.results;\n    }\n\n    getStarship(id){\n        return this.getResource(`http://swapi.dev/api/starships/${id}/`)\n    }\n}\n\nconst swapi = new SwapiService();\n\n\n"]},"metadata":{},"sourceType":"module"}